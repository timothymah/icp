{"ast":null,"code":"import React,{useEffect}from'react';import{useSelector,useDispatch}from'react-redux';import{fetchPosts,fetchSensorData}from'../actions';import roboticsAPI from'../apis/roboticsAPI';import sensorNet from'../apis/sensorNet';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var SensorData=function SensorData(){var sensorDataState=useSelector(function(state){return state.sensorData;});var dispatch=useDispatch();var SensorData=sensorNet.SensorData;useEffect(function(){dispatch(fetchSensorData(SensorData));},[]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"SensorData\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\" FOV: \",sensorDataState.FOV,\" \"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\" Zoom: \",sensorDataState.Zoom,\" \"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\" Pan Angle: \",sensorDataState.PanAngle,\" \"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\" Tilt Angle: \",sensorDataState.TiltAngle,\" \"]}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return dispatch(fetchSensorData(SensorData));},children:\"Update Sensor Data\"})]});};export default SensorData;","map":{"version":3,"sources":["/Users/timothymah/React/icp/src/components/SensorData.js"],"names":["React","useEffect","useSelector","useDispatch","fetchPosts","fetchSensorData","roboticsAPI","sensorNet","SensorData","sensorDataState","state","sensorData","dispatch","FOV","Zoom","PanAngle","TiltAngle"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,KAA+B,OAA/B,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,UAAT,CAAqBC,eAArB,KAA4C,YAA5C,CAEA,MAAOC,CAAAA,WAAP,KAAwB,qBAAxB,CACA,MAAOC,CAAAA,SAAP,KAAsB,mBAAtB,C,wFAEA,GAAMC,CAAAA,UAAU,CAAG,qBAAM,CACrB,GAAMC,CAAAA,eAAe,CAAGP,WAAW,CAAC,SAAAQ,KAAK,QAAIA,CAAAA,KAAK,CAACC,UAAV,EAAN,CAAnC,CAEA,GAAMC,CAAAA,QAAQ,CAAIT,WAAW,EAA7B,CAEA,GAAMK,CAAAA,UAAU,CAAGD,SAAS,CAACC,UAA7B,CAEAP,SAAS,CAAC,UAAM,CACZW,QAAQ,CAACP,eAAe,CAACG,UAAD,CAAhB,CAAR,CACH,CAFQ,CAEP,EAFO,CAAT,CAIA,mBACA,oCACI,kCADJ,cAEI,8BAAUC,eAAe,CAACI,GAA1B,OAFJ,cAGI,+BAAWJ,eAAe,CAACK,IAA3B,OAHJ,cAII,oCAAgBL,eAAe,CAACM,QAAhC,OAJJ,cAKI,qCAAiBN,eAAe,CAACO,SAAjC,OALJ,cAOI,eAAQ,OAAO,CAAE,yBAAMJ,CAAAA,QAAQ,CAACP,eAAe,CAACG,UAAD,CAAhB,CAAd,EAAjB,gCAPJ,GADA,CAWH,CAtBD,CAwBA,cAAeA,CAAAA,UAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { fetchPosts, fetchSensorData } from '../actions';\n\nimport roboticsAPI from '../apis/roboticsAPI'\nimport sensorNet from '../apis/sensorNet'\n\nconst SensorData = () => {\n    const sensorDataState = useSelector(state => state.sensorData)\n\n    const dispatch  = useDispatch()\n\n    const SensorData = sensorNet.SensorData \n\n    useEffect(() => {\n        dispatch(fetchSensorData(SensorData))\n    },[])\n\n    return (\n    <div>\n        <h1>SensorData</h1>\n        <p> FOV: {sensorDataState.FOV} </p>\n        <p> Zoom: {sensorDataState.Zoom} </p>\n        <p> Pan Angle: {sensorDataState.PanAngle} </p>\n        <p> Tilt Angle: {sensorDataState.TiltAngle} </p>\n\n        <button onClick={() => dispatch(fetchSensorData(SensorData))}>Update Sensor Data</button>\n    </div>    \n    )\n}\n\nexport default SensorData;\n\n"]},"metadata":{},"sourceType":"module"}