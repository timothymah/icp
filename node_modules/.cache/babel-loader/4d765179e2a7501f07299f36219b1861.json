{"ast":null,"code":"var _jsxFileName = \"/Users/timothymah/React/icp/src/components/PostList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchPosts } from '../actions'; // import UserHeader from './UserHeader';\n\nimport SensorTelemetry from '../apis/roboticsAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostList = () => {\n  _s();\n\n  const PostsState = useSelector(state => state.posts);\n  const dispatch = useDispatch();\n  const response = {\n    data: 'hi'\n  };\n  const response2 = {\n    data: 'hello'\n  };\n  const Localisation = {\n    RobotID: 1,\n    RobotModel: \"BD\",\n    XYFloor: [1, 2, 3],\n    VxVy: [1, 1]\n  }; // const SensorData = {FOV: 45, Zoom: 2, PanAngle: 20, TiltAngle: 30}\n\n  const Registration = {\n    RobotID: 1,\n    RobotModel: \"BD\",\n    XYFloor: [1, 2, 3],\n    Sensor: [\"EO\", \"Lidar\"]\n  };\n  useEffect(() => {\n    dispatch(fetchPosts(SensorTelemetry));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: PostsState.SensorType\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch(fetchPosts(response2)),\n      children: \"Increase Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostList, \"/by+0WFWTf7WOkZZpuP8VC0e628=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = PostList;\nexport default PostList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"sources":["/Users/timothymah/React/icp/src/components/PostList.js"],"names":["React","useEffect","useSelector","useDispatch","fetchPosts","SensorTelemetry","PostList","PostsState","state","posts","dispatch","response","data","response2","Localisation","RobotID","RobotModel","XYFloor","VxVy","Registration","Sensor","SensorType"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,YAA3B,C,CACA;;AAEA,OAAOC,eAAP,MAA4B,qBAA5B;;;AAGA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAMC,UAAU,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACC,KAAhB,CAA9B;AAEA,QAAMC,QAAQ,GAAIP,WAAW,EAA7B;AAEA,QAAMQ,QAAQ,GAAG;AAACC,IAAAA,IAAI,EAAG;AAAR,GAAjB;AACA,QAAMC,SAAS,GAAG;AAACD,IAAAA,IAAI,EAAE;AAAP,GAAlB;AACA,QAAME,YAAY,GAAG;AAACC,IAAAA,OAAO,EAAE,CAAV;AAAaC,IAAAA,UAAU,EAAE,IAAzB;AAA+BC,IAAAA,OAAO,EAAE,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAAxC;AAAiDC,IAAAA,IAAI,EAAE,CAAC,CAAD,EAAG,CAAH;AAAvD,GAArB,CAPmB,CAQnB;;AAEA,QAAMC,YAAY,GAAG;AAACJ,IAAAA,OAAO,EAAE,CAAV;AAAaC,IAAAA,UAAU,EAAE,IAAzB;AAA+BC,IAAAA,OAAO,EAAE,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAAxC;AAAiDG,IAAAA,MAAM,EAAE,CAAC,IAAD,EAAO,OAAP;AAAzD,GAArB;AAIAnB,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,QAAQ,CAACN,UAAU,CAACC,eAAD,CAAX,CAAR;AACH,GAFQ,EAEP,EAFO,CAAT;AAIA,sBACA;AAAA,4BACI;AAAA,gBAAKE,UAAU,CAACc;AAAhB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,OAAO,EAAE,MAAMX,QAAQ,CAACN,UAAU,CAACS,SAAD,CAAX,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAQH,CA1BD;;GAAMP,Q;UACiBJ,W,EAEDC,W;;;KAHhBG,Q;AA4BN,eAAeA,QAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { fetchPosts } from '../actions';\n// import UserHeader from './UserHeader';\n\nimport SensorTelemetry from '../apis/roboticsAPI'\n\n\nconst PostList = () => {\n    const PostsState = useSelector(state => state.posts)\n\n    const dispatch  = useDispatch()\n\n    const response = {data : 'hi'}\n    const response2 = {data: 'hello'}\n    const Localisation = {RobotID: 1, RobotModel: \"BD\", XYFloor: [1,2,3], VxVy: [1,1] }\n    // const SensorData = {FOV: 45, Zoom: 2, PanAngle: 20, TiltAngle: 30}\n\n    const Registration = {RobotID: 1, RobotModel: \"BD\", XYFloor: [1,2,3], Sensor: [\"EO\", \"Lidar\"]}\n    \n\n\n    useEffect(() => {\n        dispatch(fetchPosts(SensorTelemetry))\n    },[])\n\n    return (\n    <div>\n        <h1>{PostsState.SensorType}</h1>\n        <button onClick={() => dispatch(fetchPosts(response2))}>Increase Counter</button>\n    </div>\n    \n    )\n\n}\n\nexport default PostList;\n\n"]},"metadata":{},"sourceType":"module"}