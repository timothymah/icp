{"code":"(this.webpackJsonpicp=this.webpackJsonpicp||[]).push([[0],{45:function(e,t,n){\"use strict\";n.r(t);var c=n(0),r=n(19),o=n.n(r),s=n(17),i=n(18),a=n(25),j=n(30),O=n(29),l=function(e){return{type:\"FETCH_SENSOR_DATA\",payload:e}},b={SensorTelemetry:{SensorID:12344321,SensorType:\"EO\"},SensorData:{FOV:45,Zoom:2,PanAngle:20,TiltAngle:30},Registration:{RobotID:1,SensorType:\"EO\",XYFloor:[1,2,3],Sensor:[\"EO\",\"Lidar\"]}},u=n(5),d=function(){var e=Object(s.c)((function(e){return e.sensorData})),t=Object(s.b)(),n=b.SensorData;return Object(c.useEffect)((function(){t(l(n))}),[]),Object(u.jsxs)(\"div\",{children:[Object(u.jsx)(\"h1\",{children:\"SensorData\"}),Object(u.jsxs)(\"p\",{children:[\" FOV: \",e.FOV,\" \"]}),Object(u.jsxs)(\"p\",{children:[\" Zoom: \",e.Zoom,\" \"]}),Object(u.jsxs)(\"p\",{children:[\" Pan Angle: \",e.PanAngle,\" \"]}),Object(u.jsxs)(\"p\",{children:[\" Tilt Angle: \",e.TiltAngle,\" \"]}),Object(u.jsx)(\"button\",{onClick:function(){return t(l(n))},children:\"Update Sensor Data\"})]})},p=function(){var e=Object(c.useState)(\"\"),t=Object(j.a)(e,2),n=t[0],r=t[1];return Object(c.useEffect)((function(){Object(O.a)(\"http://localhost:3000\").on(\"FromAPI\",(function(e){r(e)}))}),[]),Object(u.jsxs)(\"div\",{children:[Object(u.jsx)(d,{}),\"It's \",Object(u.jsx)(\"time\",{dateTime:n,children:n})]})},h=Object(i.b)({sensorData:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1?arguments[1]:void 0;return\"FETCH_SENSOR_DATA\"===t.type?t.payload:e}}),S=Object(i.c)(h,Object(i.a)(a.a));o.a.render(Object(u.jsx)(s.a,{store:S,children:Object(u.jsx)(p,{})}),document.querySelector(\"#root\"))}},[[45,1,2]]]);","name":"static/js/main.8c2014dc.chunk.js","map":{"version":3,"sources":["static/js/main.8c2014dc.chunk.js"],"names":["this","push","module","__webpack_exports__","__webpack_require__","r","react","react_dom","react_dom_default","n","es","redux","redux_thunk_es","slicedToArray","esm","fetchSensorData","response","type","payload","apis_sensorNet","SensorTelemetry","SensorID","SensorType","SensorData","FOV","Zoom","PanAngle","TiltAngle","Registration","RobotID","XYFloor","Sensor","jsx_runtime","components_SensorData","sensorDataState","Object","state","sensorData","dispatch","children","onClick","components_App","_useState","_useState2","setResponse","on","data","dateTime","reducers","arguments","length","undefined","action","store","a","render","document","querySelector"],"mappings":"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"},"input":"(this[\"webpackJsonpicp\"] = this[\"webpackJsonpicp\"] || []).push([[0],{\n\n/***/ 45:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(0);\n\n// EXTERNAL MODULE: ./node_modules/react-dom/index.js\nvar react_dom = __webpack_require__(19);\nvar react_dom_default = /*#__PURE__*/__webpack_require__.n(react_dom);\n\n// EXTERNAL MODULE: ./node_modules/react-redux/es/index.js + 26 modules\nvar es = __webpack_require__(17);\n\n// EXTERNAL MODULE: ./node_modules/redux/es/redux.js + 2 modules\nvar redux = __webpack_require__(18);\n\n// EXTERNAL MODULE: ./node_modules/redux-thunk/es/index.js\nvar redux_thunk_es = __webpack_require__(25);\n\n// EXTERNAL MODULE: ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js + 3 modules\nvar slicedToArray = __webpack_require__(30);\n\n// EXTERNAL MODULE: ./node_modules/socket.io-client/build/esm/index.js + 14 modules\nvar esm = __webpack_require__(29);\n\n// CONCATENATED MODULE: ./src/actions/index.js\nvar fetchSensorData=function fetchSensorData(response){return{type:'FETCH_SENSOR_DATA',payload:response};};\n// CONCATENATED MODULE: ./src/apis/roboticsAPI.js\nvar SensorTelemetry={RobotID:1,RobotModel:\"BD\",SensorID:12344321,SensorType:\"EO\",SensorData:{FOV:45,Zoom:2,PanAngle:20,TiltAngle:30}};var Localisation={RobotID:1,RobotModel:\"BD\",XYFloor:[1,2,3],VxVy:[1,1]};var Registration={RobotID:1,RobotModel:\"BD\",XYFloor:[1,2,3],Sensor:[\"EO\",\"Lidar\"]};var roboticsAPI={SensorTelemetry:SensorTelemetry,Localisation:Localisation,Registration:Registration};/* harmony default export */ var apis_roboticsAPI = (roboticsAPI);\n// CONCATENATED MODULE: ./src/apis/sensorNet.js\nvar sensorNet={SensorTelemetry:{SensorID:12344321,SensorType:\"EO\"},SensorData:{FOV:45,Zoom:2,PanAngle:20,TiltAngle:30},Registration:{RobotID:1,SensorType:\"EO\",XYFloor:[1,2,3],Sensor:[\"EO\",\"Lidar\"]}};/* harmony default export */ var apis_sensorNet = (sensorNet);\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(5);\n\n// CONCATENATED MODULE: ./src/components/SensorData.js\nvar SensorData_SensorData=function SensorData(){var sensorDataState=Object(es[\"c\" /* useSelector */])(function(state){return state.sensorData;});var dispatch=Object(es[\"b\" /* useDispatch */])();var SensorData=apis_sensorNet.SensorData;Object(react[\"useEffect\"])(function(){dispatch(fetchSensorData(SensorData));},[]);return/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"div\",{children:[/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"h1\",{children:\"SensorData\"}),/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"p\",{children:[\" FOV: \",sensorDataState.FOV,\" \"]}),/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"p\",{children:[\" Zoom: \",sensorDataState.Zoom,\" \"]}),/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"p\",{children:[\" Pan Angle: \",sensorDataState.PanAngle,\" \"]}),/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"p\",{children:[\" Tilt Angle: \",sensorDataState.TiltAngle,\" \"]}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"button\",{onClick:function onClick(){return dispatch(fetchSensorData(SensorData));},children:\"Update Sensor Data\"})]});};/* harmony default export */ var components_SensorData = (SensorData_SensorData);\n// CONCATENATED MODULE: ./src/components/App.js\nvar ENDPOINT=\"http://localhost:3000\";var App_App=function App(){var _useState=Object(react[\"useState\"])(\"\"),_useState2=Object(slicedToArray[\"a\" /* default */])(_useState,2),response=_useState2[0],setResponse=_useState2[1];Object(react[\"useEffect\"])(function(){var socket=Object(esm[\"a\" /* default */])(ENDPOINT);socket.on(\"FromAPI\",function(data){setResponse(data);});},[]);return/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"div\",{children:[/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(components_SensorData,{}),\"It's \",/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"time\",{dateTime:response,children:response})]});};/* harmony default export */ var components_App = (App_App);\n// CONCATENATED MODULE: ./src/reducers/sensorDataReducer.js\n/* harmony default export */ var sensorDataReducer = (function(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case'FETCH_SENSOR_DATA':return action.payload;default:return state;}});\n// CONCATENATED MODULE: ./src/reducers/index.js\n/* harmony default export */ var reducers = (Object(redux[\"b\" /* combineReducers */])({sensorData:sensorDataReducer}));\n// CONCATENATED MODULE: ./src/index.js\nvar store=Object(redux[\"c\" /* createStore */])(reducers,Object(redux[\"a\" /* applyMiddleware */])(redux_thunk_es[\"a\" /* default */]));react_dom_default.a.render(/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(es[\"a\" /* Provider */],{store:store,children:/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(components_App,{})}),document.querySelector('#root'));\n\n/***/ })\n\n},[[45,1,2]]]);","inputSourceMap":{"version":3,"sources":["/Users/timothymah/React/icp/src/actions/index.js","/Users/timothymah/React/icp/src/apis/roboticsAPI.js","/Users/timothymah/React/icp/src/apis/sensorNet.js","/Users/timothymah/React/icp/src/components/SensorData.js","/Users/timothymah/React/icp/src/components/App.js","/Users/timothymah/React/icp/src/reducers/sensorDataReducer.js","/Users/timothymah/React/icp/src/reducers/index.js","/Users/timothymah/React/icp/src/index.js"],"names":["fetchSensorData","response","type","payload","SensorTelemetry","RobotID","RobotModel","SensorID","SensorType","SensorData","FOV","Zoom","PanAngle","TiltAngle","Localisation","XYFloor","VxVy","Registration","Sensor","roboticsAPI","sensorNet","sensorDataState","useSelector","state","sensorData","dispatch","useDispatch","useEffect","ENDPOINT","App","useState","setResponse","socket","socketIOClient","on","data","action","combineReducers","sensorDataReducer","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","querySelector"],"mappings":"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","file":"x","sourcesContent":["export const fetchSensorData = (response) => {\n    return {\n      type: 'FETCH_SENSOR_DATA', \n      payload: response\n    }\n  };\n  \n","const SensorTelemetry = {\n    RobotID: 1, \n    RobotModel: \"BD\", \n    SensorID: 12344321, \n    SensorType: \"EO\", \n    SensorData: {FOV: 45, Zoom: 2, PanAngle: 20, TiltAngle: 30}\n    }\n\nconst Localisation = {\n    RobotID: 1, \n    RobotModel: \"BD\", \n    XYFloor: [1,2,3], \n    VxVy: [1,1] \n}\n    \nconst Registration = {\n    RobotID: 1, \n    RobotModel: \"BD\", \n    XYFloor: [1,2,3], \n    Sensor: [\"EO\", \"Lidar\"]\n}\n\nconst roboticsAPI = {\n    SensorTelemetry,\n    Localisation,\n    Registration\n}\n\n\n\nexport default roboticsAPI;","const sensorNet = {\n    SensorTelemetry: {\n        SensorID: 12344321, \n        SensorType: \"EO\", \n        },\n\n    SensorData: {\n            FOV: 45, \n            Zoom: 2, \n            PanAngle: 20, \n            TiltAngle: 30\n        },\n    \n    Registration: {\n            RobotID: 1, \n            SensorType: \"EO\", \n            XYFloor: [1,2,3], \n            Sensor: [\"EO\", \"Lidar\"]\n        }\n}\n\nexport default sensorNet;","import React, {useEffect} from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { fetchPosts, fetchSensorData } from '../actions';\n\nimport roboticsAPI from '../apis/roboticsAPI'\nimport sensorNet from '../apis/sensorNet'\n\nconst SensorData = () => {\n    const sensorDataState = useSelector(state => state.sensorData)\n\n    const dispatch  = useDispatch()\n\n    const SensorData = sensorNet.SensorData \n\n    useEffect(() => {\n        dispatch(fetchSensorData(SensorData))\n    },[])\n\n    return (\n    <div>\n        <h1>SensorData</h1>\n        <p> FOV: {sensorDataState.FOV} </p>\n        <p> Zoom: {sensorDataState.Zoom} </p>\n        <p> Pan Angle: {sensorDataState.PanAngle} </p>\n        <p> Tilt Angle: {sensorDataState.TiltAngle} </p>\n\n        <button onClick={() => dispatch(fetchSensorData(SensorData))}>Update Sensor Data</button>\n    </div>    \n    )\n}\n\nexport default SensorData;\n\n","import React, { useState, useEffect } from 'react';\nimport socketIOClient from \"socket.io-client\";\n\nimport SensorData from './SensorData';\n\nconst ENDPOINT = \"http://localhost:3000\";\n\nconst App = () => {\n    const [response, setResponse] = useState(\"\");\n\n    useEffect(() => {\n      const socket = socketIOClient(ENDPOINT);\n      socket.on(\"FromAPI\", data => {\n        setResponse(data);\n      });\n    }, []);\n\n    \n    return (\n    <div>\n        <SensorData/>\n        It's <time dateTime={response}>{response}</time>\n    </div>\n\n    \n  );\n};\n\nexport default App;\n","export default (state = [], action) => {\n  switch (action.type) {\n    case 'FETCH_SENSOR_DATA':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport sensorDataReducer from './sensorDataReducer';\n\nexport default combineReducers({\n  sensorData: sensorDataReducer\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport App from './components/App';\nimport reducers from './reducers';\n\nconst store = createStore(reducers, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n    document.querySelector('#root')\n);\n"]}}